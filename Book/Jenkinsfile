pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'bookstore:latest'
        REGISTRY = 'adrielnascimento/bookstore'
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Verify Workspace') {
            steps {
                bat 'dir'
            }
        }

        stage('Build JAR') {
            steps {
                dir('Book') {  // Muda para o diretório Book antes de executar
                    bat 'mvnw.cmd clean package -DskipTests'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('Book') {  // Muda para o diretório Book para o Dockerfile
                    bat "docker build -t %REGISTRY%:%DOCKER_IMAGE% ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                bat 'echo %DOCKERHUB_CREDENTIALS_PSW% | docker login -u %DOCKERHUB_CREDENTIALS_USR% --password-stdin'
                bat "docker push %REGISTRY%:%DOCKER_IMAGE%"
                bat 'docker logout'
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withKubeConfig([credentialsId: 'kubeconfig-credentials']) {
                    dir('Book') {  // Muda para o diretório Book para os arquivos k8s
                        bat 'kubectl apply -f deployment.yaml'
                        bat 'kubectl apply -f service.yaml'
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully.'
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
        }
        always {
            cleanWs()
        }
    }
}